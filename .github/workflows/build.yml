name: Build and Test Wheels

on:
  push:
    branches:
      - master

jobs:
  build-gpu-wheel:
    name: wheel-${{matrix.python-version}}-cuda${{matrix.cuda-version}}-${{matrix.os}}
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash -el {0}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest"] #, "macos-latest", "windows-latest"]
        python-version: ["3.9", "3.10", "3.11", "3.12"]
        cuda-version: ["12.4.0"]
    steps:
      - uses: actions/checkout@v2

      - uses: Jimver/cuda-toolkit@v0.2.16
        id: cuda-toolkit
        with:
          cuda: ${{matrix.cuda-version}}
        
      - run: |
          nvcc -V

      - uses: conda-incubator/setup-miniconda@v3
        with:
          auto-update-conda: true
          python-version: ${{ matrix.python-version }}
          mamba-version: "*"
          channels: conda-forge, pytorch, nvidia
          environment-file: environment.yml
          activate-environment: test_gpu_install_env
          
      - name: Enforce cuda version via conda
        run: mamba install -c conda-forge cuda-version=${{ matrix.cuda-version }}

      - name: Install CuPy
        run: mamba install -c conda-forge cupy

      - name: Run Prebuild
        run: |
          cp scripts/prebuild.py ./
          python prebuild.py

      - name: build wheels
        run: |
          python -m pip install build twine
          python -m build .

      - name: Pip install the built wheel
        run: python -m pip install ./dist/*.whl

      - name: Run Tests
        run: python -m unittest discover